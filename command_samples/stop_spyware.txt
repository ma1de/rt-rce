# WARNING
# Before that you should kill dnsmasq and make your own dnsmasq config to make sure that your
# router always uses Cloudflare's DNS. Otherwise some rules might be destructive.
# Your config should be created in tmpfs, because the root partition of the router is
# in the read-only mode. Note that the provided dnsmasq config requires you to have a 
# static IPv4 address, but you can modify the config as you wish.
#
# ПРЕДУПРЕЖДЕНИЕ
# Перед выполнением данных команд следует остановить инстанцию dnsmasq и сделать свой конфиг.
# Направте все DNS реквесты на сервера Cloudflare или другого провайдера, только не забудьте
# поменять IP DNS в этом текстовом файле. Конфиг нужно сделать в tmpfs, потому что роутер
# запущен в read-only режиме. Заметьте, что предоставленный конфиг dnsmasq расчитывает на то, 
# что у вас фиксированный IPv4 адрес, но это можно изменить

bash -c "echo -e \"user=\ngroup=\ndomain-needed\nbogus-priv\nlocal=/wpad.IGD_Rostelecom/\nserver=1.1.1.1@YOUR.STATIC.IP.HERE\nserver=1.0.0.1@YOUR.STATIC.IP.HERE\nserver=2606:4700:4700::1111\nserver=2606:4700:4700::1001\" > /run/dns.txt"
kill $(pidof dnsmasq)
/bin/dnsmasq -C /run/dns.txt &
ipset create blacklist hash:ip hashsize 4096
iptables -I INPUT -m set --match-set blacklist src -j DROP
iptables -I FORWARD -m set --match-set blacklist src -j DROP
ipset add blacklist 89.20.100.53
ipset add blacklist 83.219.25.69
ipset create whitelistdns hash:ip hashsize 4096
ipset create whitelistdns6 hash:ip family inet6
iptables -I INPUT -m set --match-set whitelistdns src -j ACCEPT
iptables -I INPUT -m set --match-set whitelistdns6 src -j ACCEPT
iptables -I FORWARD -m set --match-set whitelistdns src -j ACCEPT
iptables -I FORWARD -m set --match-set whitelistdns6 src -j ACCEPT
ipset add whitelistdns 1.1.1.1
ipset add whitelistdns 1.0.0.1
ipset add whitelistdns6 2606:4700:4700::1111
ipset add whitelistdns6 2606:4700:4700::1001
iptables -A INPUT -p udp --dport 53 -j DROP
iptables -A FORWARD -p udp --dport 53 -j DROP
iptables -D tr069 ! -i nas0_1 -p tcp -m tcp --dport 7547 -j DROP
iptables -A INPUT -p tcp --dport 7547 -j DROP
iptables -A INPUT -p udp --dport 7547 -j DROP
iptables -A OUTPUT -p tcp --dport 7547 -j DROP
iptables -A OUTPUT -p udp --dport 7547 -j DROP
iptables -A FORWARD -p tcp --dport 7547 -j DROP
iptables -A FORWARD -p udp --dport 7547 -j DROP
kill $(pidof cwmpClient)